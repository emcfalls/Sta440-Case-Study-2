---
title: "Women and Men's Visualization"
subtitle: "no subtitle"
author: "Emily Zhao"
format: 
  html:
    self-contained: true
---

# helper function to transform scores into relevant medals


```{r}


transform_values <- function(column) {
  ranks <- min_rank(-column)  
  result <- ifelse(ranks == 1, 3, ifelse(ranks == 2, 2, ifelse(ranks == 3, 1, 0)))
  return(result)
}

separate_columns <- function(data) {
  
  
  # Bind the result matrix with the original data frame, excluding the original list column
  result_data <- mutate_at(data, vars(starts_with("SimulationResults")), transform_values)

  result_data$avg_result <- rowMeans(select(result_data, starts_with("SimulationResults")))

  return(result_data)
}
```

```{r}

aBB_column_data <- read.csv("EZ Simulation Exports/aBB_column_data.csv")
aFX_column_data <- read.csv("EZ Simulation Exports/aFX_column_data.csv")
aUB_column_data <- read.csv("EZ Simulation Exports/aUB_column_data.csv")
aVT_column_data <- read.csv("EZ Simulation Exports/aVT_column_data.csv")


## RUN ONLY ONCE TO SWITCH THE ORDER OF THE NAMES
aBB_column_data$FullName <- sapply(strsplit(aBB_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))
aFX_column_data$FullName <- sapply(strsplit(aFX_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))
aUB_column_data$FullName <- sapply(strsplit(aUB_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))
aVT_column_data$FullName <- sapply(strsplit(aVT_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))



# find the top 10 athletes for each event

aBB_top10 <- separate_columns(aBB_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)


aFX_top10 <- separate_columns(aFX_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

aUB_top10 <- separate_columns(aUB_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
    arrange(desc(avg_result)) %>% 
  slice(1:10)

aVT_top10 <- separate_columns(aVT_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
    arrange(desc(avg_result)) %>% 
  slice(1:10)
```


```{r}

# create common data frame with all the results
# top10s <- rbind(aBB_top10, aFX_top10, aUB_top10, aVT_top10)

```

```{r}
aBB_top10 <- aBB_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(aBB_top10))) 

aBB_top10_chart <-ggplot(aBB_top10, aes(y= reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  theme(axis.title.y=element_blank()) + 
  geom_col() +
#  scale_x_continuous(limits=c(0, 3), breaks = c(0, 1, 2, 3), labels = c("", "Bronze", "Silver", "Gold")) + 
  scale_x_continuous(limits=c(0, 3)) +
  labs(title = "Balance Beam", x = "Average Medal Score", y = "", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country))~., scales = "free", space='free')+
  scale_fill_discrete(name = "Ranking", labels = c("Top 3", "Top 4-10th"))

```

```{r}
aFX_top10 <- aFX_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(aFX_top10))) 

aFX_top10_chart <-ggplot(aFX_top10, aes(y= reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  theme(axis.title.y=element_blank()) + 
  geom_col() +
  scale_x_continuous(limits=c(0, 3)) +
  labs(title = "Floor Exercise", x = "Average Medal Score") +
  facet_grid(factor(Country, unique(Country))~., scales = "free", space='free') +
  scale_fill_discrete(name = "Ranking", labels = c("Top 3", "Top 4-10th"))

```

```{r}
aUB_top10 <- aUB_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(aUB_top10)))

aUB_top10_chart <- ggplot(aUB_top10, aes(y= reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  theme(axis.title.y=element_blank()) + 
  geom_col() +
  scale_x_continuous(limits=c(0, 3)) +
  labs(title = "Uneven Bars", x = "Average Medal Score") +
  facet_grid(factor(Country, unique(Country))~., scales = "free", space='free') +
  scale_fill_discrete(name = "Ranking", labels = c("Top 3", "Top 4-10th"))

```

```{r}
aVT_top10 <- aVT_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(aVT_top10)))

aVT_top10_chart <- ggplot(aVT_top10, aes(y= reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  theme(axis.title.y=element_blank()) + 
  geom_col() +
  scale_x_continuous(limits=c(0, 3)) +
  labs(title = "Vault", x = "Average Medal Score") +
  facet_grid(factor(Country, unique(Country))~., scales = "free", space='free') +
  scale_fill_discrete(name = "Ranking", labels = c("Top 3", "Top 4-10th"))
```

```{r, fig.width = 8, fig.height = 8}


combined <- aBB_top10_chart + aFX_top10_chart + aUB_top10_chart + aVT_top10_chart & theme(legend.position = "bottom")

combined + plot_layout(guides = "collect") + plot_annotation('Top 10 Women by Apparatus and Country',theme=theme(plot.title=element_text(hjust=0.5)))

```






## MENS 

```{r}
# For mHB
mHB_column_data <- read.csv("EZ Simulation Exports/mHB_column_data.csv")
mHB_column_data$FullName <- sapply(strsplit(mHB_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

# For mFX
mFX_column_data <- read.csv("EZ Simulation Exports/mFX_column_data.csv")
mFX_column_data$FullName <- sapply(strsplit(mFX_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

# For mPB
mPB_column_data <- read.csv("EZ Simulation Exports/mPB_column_data.csv")
mPB_column_data$FullName <- sapply(strsplit(mPB_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

# For mPH
mPH_column_data <- read.csv("EZ Simulation Exports/mPH_column_data.csv")
mPH_column_data$FullName <- sapply(strsplit(mPH_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

# For mSR
mSR_column_data <- read.csv("EZ Simulation Exports/mSR_column_data.csv")
mSR_column_data$FullName <- sapply(strsplit(mSR_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

# For mVT
mVT_column_data <- read.csv("EZ Simulation Exports/mVT_column_data.csv")
mVT_column_data$FullName <- sapply(strsplit(mVT_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

```

```{r}
# For mHB
mHB_top10 <- separate_columns(mHB_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mHB_top10 <- mHB_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mHB_top10)))

# For mFX
mFX_top10 <- separate_columns(mFX_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mFX_top10 <- mFX_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mFX_top10)))

# For mPB
mPB_top10 <- separate_columns(mPB_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mPB_top10 <- mPB_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mPB_top10)))

# For mPH
mPH_top10 <- separate_columns(mPH_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mPH_top10 <- mPH_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mPH_top10)))

# For mSR
mSR_top10 <- separate_columns(mSR_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mSR_top10 <- mSR_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mSR_top10)))

# For mVT
mVT_top10 <- separate_columns(mVT_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mVT_top10 <- mVT_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mVT_top10)))

```


```{r}
# Assuming mHB_top10 is the data frame for Men's Horizontal Bar apparatus
mHB_top10_chart <- ggplot(mHB_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  theme(axis.title.y = element_blank()) + 
  geom_col() +
  scale_x_continuous(limits = c(0, 3)) +
  labs(title = "Horizontal Bar", x = "Average Medal Score") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free') +
  scale_fill_discrete(name = "Ranking", labels = c("Top 3", "Top 4-10th"))

mFX_top10_chart <- ggplot(mFX_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  theme(axis.title.y = element_blank()) + 
  geom_col() +
  scale_x_continuous(limits = c(0, 3)) +
  labs(title = "Floor Exercise", x = "Average Medal Score") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free') +
  scale_fill_discrete(name = "Ranking", labels = c("Top 3", "Top 4-10th"))

mPB_top10_chart <- ggplot(mPB_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  theme(axis.title.y = element_blank()) + 
  geom_col() +
  scale_x_continuous(limits = c(0, 3)) +
  labs(title = "Parallel Bars", x = "Average Medal Score") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free') +
  scale_fill_discrete(name = "Ranking", labels = c("Top 3", "Top 4-10th"))

mPH_top10_chart <- ggplot(mPH_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  theme(axis.title.y = element_blank()) + 
  geom_col() +
  scale_x_continuous(limits = c(0, 3)) +
  labs(title = "Pommel Horse", x = "Average Medal Score") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free') +
  scale_fill_discrete(name = "Ranking", labels = c("Top 3", "Top 4-10th"))

mSR_top10_chart <- ggplot(mSR_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  theme(axis.title.y = element_blank()) + 
  geom_col() +
  scale_x_continuous(limits = c(0, 3)) +
  labs(title = "Still Rings", x = "Average Medal Score") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free') +
  scale_fill_discrete(name = "Ranking", labels = c("Top 3", "Top 4-10th"))

mVT_top10_chart <- ggplot(mVT_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  theme(axis.title.y = element_blank()) + 
  geom_col() +
  scale_x_continuous(limits = c(0, 3)) +
  labs(title = "Vault", x = "Average Medal Score") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free') +
  scale_fill_discrete(name = "Ranking", labels = c("Top 3", "Top 4-10th"))

```


```{r, fig.width = 8, fig.height = 15}


combined <- mHB_top10_chart + mFX_top10_chart + mPB_top10_chart + mPH_top10_chart + mSR_top10_chart + mVT_top10_chart & theme(legend.position = "bottom")

combined + plot_layout(guides = "collect") + plot_annotation('Top 10 Men by Apparatus and Country',theme=theme(plot.title=element_text(hjust=0.5))) + plot_layout(ncol = 2)

```

## Misc Visualizations

```{r eda-rounds}

ggplot(df_usaw_vt_bestscore, mapping = aes(x = Score, y = FullName, fill = Year)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label=Score), size = 3.5,  hjust = 1.1) +
  facet_wrap(~Round)

```


```{r}
Men_Team_sim_1 <- all_team_scores$sim1  
```

