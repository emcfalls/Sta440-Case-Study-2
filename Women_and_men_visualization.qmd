---
title: "Women and Men's Visualization"
subtitle: "no subtitle"
author: "Emily Zhao"
format: 
  html:
    self-contained: true
---

# helper function to transform scores into relevant medals


```{r}


transform_values <- function(column) {
  ranks <- min_rank(-column)  
  result <- ifelse(ranks == 1, 3, ifelse(ranks == 2, 2, ifelse(ranks == 3, 1, 0)))
  return(result)
}

separate_columns <- function(data) {
  
  
  # Bind the result matrix with the original data frame, excluding the original list column
  result_data <- mutate_at(data, vars(starts_with("SimulationResults")), transform_values)

  result_data$avg_result <- rowMeans(select(result_data, starts_with("SimulationResults")))

  return(result_data)
}
```

```{r}

aBB_column_data <- read.csv("EZ Simulation Exports/aBB_column_data.csv")
aFX_column_data <- read.csv("EZ Simulation Exports/aFX_column_data.csv")
aUB_column_data <- read.csv("EZ Simulation Exports/aUB_column_data.csv")
aVT_column_data <- read.csv("EZ Simulation Exports/aVT_column_data.csv")


## RUN ONLY ONCE TO SWITCH THE ORDER OF THE NAMES
aBB_column_data$FullName <- sapply(strsplit(aBB_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))
aFX_column_data$FullName <- sapply(strsplit(aFX_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))
aUB_column_data$FullName <- sapply(strsplit(aUB_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))
aVT_column_data$FullName <- sapply(strsplit(aVT_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))



# find the top 10 athletes for each event

aBB_top10 <- separate_columns(aBB_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)


aFX_top10 <- separate_columns(aFX_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

aUB_top10 <- separate_columns(aUB_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
    arrange(desc(avg_result)) %>% 
  slice(1:10)

aVT_top10 <- separate_columns(aVT_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
    arrange(desc(avg_result)) %>% 
  slice(1:10)
```


```{r}

# create common data frame with all the results
# top10s <- rbind(aBB_top10, aFX_top10, aUB_top10, aVT_top10)

```

```{r}
aBB_top10 <- aBB_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(aBB_top10))) 

aBB_top10_chart <-ggplot(aBB_top10, aes(y= reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 Women for Balance Beam", y = "Gymnast", x = "Average Medal Score", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country))~., scales = "free", space='free')

aBB_top10_chart
```

```{r}
aFX_top10 <- aFX_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(aFX_top10))) 

aFX_top10_chart <-ggplot(aFX_top10, aes(y= reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 Women For Floor Exercise", y = "Gymnast", x = "Average Medal Score", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country))~., scales = "free", space='free') 

aFX_top10_chart
```

```{r}
aUB_top10 <- aUB_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(aUB_top10)))

aUB_top10_chart <- ggplot(aUB_top10, aes(y= reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 Female Athletes For Uneven Bars", y = "Gymnast", x = "Average Medal Score", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country))~., scales = "free", space='free') 

aUB_top10_chart
```

```{r}
aVT_top10 <- aVT_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(aVT_top10)))

aVT_top10_chart <- ggplot(aVT_top10, aes(y= reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 Female Athletes For Vault", y = "Gymnast", x = "Average Medal Score", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country))~., scales = "free", space='free') 
```

```{r}


combined <- aBB_top10_chart + aFX_top10_chart + aUB_top10_chart + aVT_top10_chart & theme(legend.position = "bottom")

combined + plot_layout(guides = "collect") + plot_annotation('Charts of Top 10 Women by Apparatus and Country',theme=theme(plot.title=element_text(hjust=0.5)))

```


```{r, fig.size = 10}
top10s %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(top10s))) %>% 
  ggplot(aes(y= reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 Female Athletes For Each Event by Country (2022-2023)") +
  facet_grid(Country ~ Apparatus, scales = "free", space = "free") 
```




## MENS 

```{r}
# For mHB
mHB_column_data <- read.csv("EZ Simulation Exports/mHB_column_data.csv")
mHB_column_data$FullName <- sapply(strsplit(mHB_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

# For mFX
mFX_column_data <- read.csv("EZ Simulation Exports/mFX_column_data.csv")
mFX_column_data$FullName <- sapply(strsplit(mFX_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

# For mPB
mPB_column_data <- read.csv("EZ Simulation Exports/mPB_column_data.csv")
mPB_column_data$FullName <- sapply(strsplit(mPB_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

# For mPH
mPH_column_data <- read.csv("EZ Simulation Exports/mPH_column_data.csv")
mPH_column_data$FullName <- sapply(strsplit(mPH_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

# For mSR
mSR_column_data <- read.csv("EZ Simulation Exports/mSR_column_data.csv")
mSR_column_data$FullName <- sapply(strsplit(mSR_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

# For mVT
mVT_column_data <- read.csv("EZ Simulation Exports/mVT_column_data.csv")
mVT_column_data$FullName <- sapply(strsplit(mVT_column_data$FullName, " "), function(x) paste(rev(x), collapse = " "))

```

```{r}
# For mHB
mHB_top10 <- separate_columns(mHB_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mHB_top10 <- mHB_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mHB_top10)))

# For mFX
mFX_top10 <- separate_columns(mFX_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mFX_top10 <- mFX_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mFX_top10)))

# For mPB
mPB_top10 <- separate_columns(mPB_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mPB_top10 <- mPB_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mPB_top10)))

# For mPH
mPH_top10 <- separate_columns(mPH_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mPH_top10 <- mPH_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mPH_top10)))

# For mSR
mSR_top10 <- separate_columns(mSR_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mSR_top10 <- mSR_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mSR_top10)))

# For mVT
mVT_top10 <- separate_columns(mVT_column_data) %>% 
  select(FullName, Apparatus, Country, avg_result) %>% 
  arrange(desc(avg_result)) %>% 
  slice(1:10)

mVT_top10 <- mVT_top10 %>% 
  mutate(top_3 = rep(c("Top 3", "Top 3", "Top 3", rep(NA, 7)), length.out = nrow(mVT_top10)))

```

```{r}
# For mHB
mHB_top10_chart <- ggplot(mHB_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 mHB Athletes", y = "Gymnast", x = "Average Medal Score", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free')

# For mFX
mFX_top10_chart <- ggplot(mFX_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 mFX Athletes", y = "Gymnast", x = "Average Medal Score", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free')

# For mPB
mPB_top10_chart <- ggplot(mPB_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 mPB Athletes", y = "Gymnast", x = "Average Medal Score", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free')

# For mPH
mPH_top10_chart <- ggplot(mPH_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 mPH Athletes", y = "Gymnast", x = "Average Medal Score", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free')

# For mSR
mSR_top10_chart <- ggplot(mSR_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 mSR Athletes", y = "Gymnast", x = "Average Medal Score", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free')

# For mVT
mVT_top10_chart <- ggplot(mVT_top10, aes(y = reorder(FullName, avg_result), x = avg_result, fill = top_3)) +
  geom_col() +
  labs(title = "Top 10 mVT Athletes", y = "Gymnast", x = "Average Medal Score", fill = "Top 3 Average Scores") +
  facet_grid(factor(Country, unique(Country)) ~ ., scales = "free", space = 'free')

```


## Misc Visualizations

```{r eda-rounds}

ggplot(df_usaw_vt_bestscore, mapping = aes(x = Score, y = FullName, fill = Year)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label=Score), size = 3.5,  hjust = 1.1) +
  facet_wrap(~Round)

```

